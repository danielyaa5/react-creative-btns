'use strict';

var _configure = require('./configure');

var _configure2 = _interopRequireDefault(_configure);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

test('Configuration with default theme and specimens', function () {
  expect((0, _configure2.default)({
    title: 'Catalog',
    pages: [{
      path: '/',
      title: 'Overview',
      src: 'overview.md'
    }]
  })).toMatchSnapshot();
});

test('Configuration with nested pages', function () {
  expect((0, _configure2.default)({
    title: 'Catalog',
    pages: [{
      title: 'Overview',
      pages: [{
        path: 'foo',
        title: 'Foo',
        src: 'foo.md'
      }, {
        path: 'bar',
        title: 'Bar',
        src: 'bar.md'
      }]
    }]
  })).toMatchSnapshot();
});

test('Imports are merged on pages', function () {
  var config = (0, _configure2.default)({
    title: 'Catalog',
    imports: { Foo: 'Foo' },
    pages: [{
      path: '/',
      title: 'Overview',
      imports: { Bar: 'Bar' },
      src: 'overview.md'
    }]
  });

  expect(config.pages[0].imports).toEqual({ Foo: 'Foo', Bar: 'Bar' });
});

test('basePath support', function () {
  var config = (0, _configure2.default)({
    title: 'Catalog',
    basePath: 'catalog',
    pages: [{
      path: '/',
      title: 'Overview',
      src: 'overview.md'
    }]
  });

  expect(config.basePath).toBe('/catalog');
  expect(config.pages[0].path).toBe('/catalog');
  // Fallback page
  expect(config.pages[1].path).toBe('/catalog/*');
});