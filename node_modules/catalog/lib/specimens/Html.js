'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _CatalogPropTypes = require('../CatalogPropTypes');

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

var _Frame = require('../components/Frame/Frame');

var _Frame2 = _interopRequireDefault(_Frame);

var _Hint = require('../specimens/Hint');

var _Hint2 = _interopRequireDefault(_Hint);

var _Specimen = require('../components/Specimen/Specimen');

var _Specimen2 = _interopRequireDefault(_Specimen);

var _HighlightedCode = require('../components/HighlightedCode/HighlightedCode');

var _HighlightedCode2 = _interopRequireDefault(_HighlightedCode);

var _ResponsiveTabs = require('../components/ResponsiveTabs/ResponsiveTabs');

var _ResponsiveTabs2 = _interopRequireDefault(_ResponsiveTabs);

var _runscript = require('../utils/runscript');

var _runscript2 = _interopRequireDefault(_runscript);

var _validateSizes = require('../utils/validateSizes');

var _validateSizes2 = _interopRequireDefault(_validateSizes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PADDING = 3;
var SIZE = 20;

function getStyle(theme) {
  return {
    container: {
      border: '1px solid #eee',
      borderRadius: '2px',
      boxSizing: 'border-box',
      position: 'relative',
      flexBasis: '100%',
      marginTop: '40px',
      fontFamily: theme.fontFamily
    },
    toggle: {
      border: PADDING + 'px solid transparent',
      color: theme.lightColor,
      cursor: 'pointer',
      display: 'inline-block',
      fontFamily: theme.fontMono,
      fontSize: '16px',
      fontStyle: 'normal',
      fontWeight: 700,
      height: SIZE + 'px',
      lineHeight: SIZE + 'px',
      padding: PADDING + 'px',
      position: 'absolute',
      right: -PADDING + 'px',
      top: -(SIZE + 2 * PADDING) + 'px',
      userSelect: 'none',
      ':hover': {
        color: theme.textColor
      }
    },
    source: {
      borderTop: '1px solid #eee',
      boxSizing: 'border-box',
      width: '100%',
      height: 'auto'
    },
    content: {
      background: 'url(' + theme.checkerboardPatternLight + ')',
      boxSizing: 'border-box',
      display: 'block',
      padding: 20,
      position: 'relative',
      width: '100%'
    },
    light: {
      background: 'url(' + theme.checkerboardPatternLight + ')'
    },
    dark: {
      background: 'url(' + theme.checkerboardPatternDark + ')'
    },
    plain: {
      background: 'transparent',
      padding: 0
    },
    plain_light: {
      background: theme.bgLight,
      padding: '20px'
    },
    plain_dark: {
      background: theme.bgDark,
      padding: '20px'
    },
    responsive: {
      background: 'url(' + theme.checkerboardPatternLight + ')',
      boxSizing: 'border-box',
      overflow: 'hidden',
      padding: '15px',
      textAlign: 'center'
    }
  };
}

var Html = function (_React$Component) {
  _inherits(Html, _React$Component);

  function Html(props) {
    _classCallCheck(this, Html);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _this.state = {
      viewSource: false,
      parentWidth: 0,
      activeScreenSize: (0, _validateSizes2.default)(props.responsive, props.catalog.responsiveSizes)[0] || null
    };
    _this.setSize = _this.setSize.bind(_this);
    _this.updateParentWidth = _this.updateParentWidth.bind(_this);
    return _this;
  }

  Html.prototype.componentDidMount = function componentDidMount() {
    var runScript = this.props.runScript;

    runScript && Array.from(this.specimen.querySelectorAll('script')).forEach(_runscript2.default);

    if (this.state.activeScreenSize) {
      window.addEventListener('resize', this.updateParentWidth);
      setTimeout(this.updateParentWidth);
    }
  };

  Html.prototype.componentWillUnmount = function componentWillUnmount() {
    if (this.state.activeScreenSize) {
      window.removeEventListener('resize', this.updateParentWidth);
    }
  };

  Html.prototype.setElementState = function setElementState(nextState) {
    if (typeof nextState === 'function') {
      this.setState(function (_ref) {
        var elementState = _ref.elementState;
        return { elementState: _extends({}, elementState, nextState(elementState)) };
      });
    } else {
      this.setState({ elementState: _extends({}, this.state.elementState, nextState) });
    }
  };

  Html.prototype.updateParentWidth = function updateParentWidth() {
    var nextParentWidth = this.specimen.getBoundingClientRect().width - 30;
    if (nextParentWidth !== this.state.parentWidth) {
      this.setState({ parentWidth: nextParentWidth });
    }
  };

  Html.prototype.setSize = function setSize(activeScreenSize) {
    this.setState({ activeScreenSize: activeScreenSize });
  };

  Html.prototype.toggleSource = function toggleSource() {
    this.setState(function (_ref2) {
      var viewSource = _ref2.viewSource;
      return { viewSource: !viewSource };
    });
  };

  Html.prototype.render = function render() {
    var _this2 = this;

    var _props = this.props,
        _props$catalog = _props.catalog,
        theme = _props$catalog.theme,
        responsiveSizes = _props$catalog.responsiveSizes,
        children = _props.children,
        frame = _props.frame,
        options = _objectWithoutProperties(_props, ['catalog', 'children', 'frame']);

    var _state = this.state,
        activeScreenSize = _state.activeScreenSize,
        parentWidth = _state.parentWidth,
        viewSource = _state.viewSource;

    var styles = getStyle(theme);
    var validSizes = (0, _validateSizes2.default)(options.responsive, responsiveSizes);

    var exampleStyles = _extends({}, options.plain ? styles.plain : null, options.light ? styles.light : null, options.dark ? styles.dark : null, options.plain && options.light ? styles.plain_light : null, options.plain && options.dark ? styles.plain_dark : null, options.responsive ? styles.responsive : null);

    var source = viewSource ? _react2.default.createElement(
      'div',
      { style: styles.source },
      _react2.default.createElement(_HighlightedCode2.default, { language: 'markup', code: children, theme: theme })
    ) : null;

    var toggle = !options.noSource ? _react2.default.createElement(
      'div',
      { style: styles.toggle, onClick: this.toggleSource.bind(this) },
      '<>'
    ) : null;

    // eslint-disable-next-line
    var content = _react2.default.createElement('div', { dangerouslySetInnerHTML: { __html: children } });

    if (options.responsive && !validSizes) {
      return _react2.default.createElement(
        _Hint2.default,
        { warning: true },
        'Please check that the responsive parameters match an existing entry.'
      );
    }

    return _react2.default.createElement(
      'div',
      { style: styles.container, className: 'cg-Specimen-Html', ref: function ref(el) {
          _this2.specimen = el;
        } },
      toggle,
      options.responsive && parentWidth && activeScreenSize && _react2.default.createElement(_ResponsiveTabs2.default, { theme: theme, sizes: validSizes, action: this.setSize, activeSize: activeScreenSize, parentWidth: parentWidth }),
      (!options.responsive || parentWidth) && _react2.default.createElement(
        'div',
        { style: _extends({}, styles.content, exampleStyles) },
        frame || activeScreenSize ? _react2.default.createElement(
          _Frame2.default,
          { width: activeScreenSize && activeScreenSize.width, parentWidth: parentWidth ? parentWidth : '100%', height: activeScreenSize && activeScreenSize.height },
          content
        ) : content
      ),
      source
    );
  };

  return Html;
}(_react2.default.Component);

Html.propTypes = {
  children: _react.PropTypes.string.isRequired,
  catalog: _CatalogPropTypes.catalogShape.isRequired,
  responsive: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.string)]),
  runScript: _react.PropTypes.bool,
  plain: _react.PropTypes.bool,
  light: _react.PropTypes.bool,
  dark: _react.PropTypes.bool,
  noSource: _react.PropTypes.bool,
  frame: _react.PropTypes.bool
};

exports.default = (0, _Specimen2.default)(undefined, undefined, { withChildren: true })((0, _radium2.default)(Html));