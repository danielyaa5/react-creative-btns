'use strict';

var _parseSpecimenBody = require('./parseSpecimenBody');

test('Default String body', function () {
  expect((0, _parseSpecimenBody.parseSpecimenBody)()('foo')).toEqual({ children: 'foo' });
});

test('Default JSON body', function () {
  expect((0, _parseSpecimenBody.parseSpecimenYamlBody)()('{"foo": "bar", "baz": 12.3, "nothing": null, "really": true}')).toEqual({ foo: 'bar', baz: 12.3, nothing: null, really: true });
});

test('Default YAML body', function () {
  expect((0, _parseSpecimenBody.parseSpecimenYamlBody)()('foo: bar\nbaz: 12.3\nnothing: null\nreally: true')).toEqual({ foo: 'bar', baz: 12.3, nothing: null, really: true });
});

test('Mapped raw YAML body', function () {
  expect((0, _parseSpecimenBody.parseSpecimenYamlBody)(function (_, raw) {
    return raw;
  })('foo: bar\nbaz: 12.3\nnothing: null\nreally: true'), 'foo: bar\nbaz: 12.3\nnothing: null\nreally: true');
});

test('Mapped YAML body', function () {
  expect((0, _parseSpecimenBody.parseSpecimenYamlBody)(function (props) {
    return props.foo;
  })('foo: bar\nbaz: 12.3\nnothing: null\nreally: true'), 'bar');
});

test('body with props and children', function () {
  expect((0, _parseSpecimenBody.parseSpecimenBody)()('foo: bar\nbaz: 12.3\n---\nfoo')).toEqual({ foo: 'bar', baz: 12.3, children: 'foo' });
});

test('body with props and empty children', function () {
  expect((0, _parseSpecimenBody.parseSpecimenBody)()('foo: bar\nbaz: 12.3\n---\n')).toEqual({ foo: 'bar', baz: 12.3, children: '' });
});

test('body with separator but only children', function () {
  expect((0, _parseSpecimenBody.parseSpecimenBody)()('---\nfoo')).toEqual({ children: 'foo' });
});

test('body with separator and empty props', function () {
  expect((0, _parseSpecimenBody.parseSpecimenBody)()('\n\n---\nfoo')).toEqual({ children: 'foo' });
});

test('body with separator and invalid props', function () {
  expect((0, _parseSpecimenBody.parseSpecimenBody)()('foo\n---\nbar')).toEqual({ children: 'bar' });
});

test('body with multiple separators', function () {
  expect((0, _parseSpecimenBody.parseSpecimenBody)()('foo: true\n---\nbar\n---\nbaz')).toEqual({ foo: true, children: 'bar\n---\nbaz' });
});

test('body with trailing separator', function () {
  expect((0, _parseSpecimenBody.parseSpecimenBody)()('foo---\nbar')).toEqual({ children: 'foo---\nbar' });
});

test('body with children but valid yaml', function () {
  expect((0, _parseSpecimenBody.parseSpecimenBody)()('foo: true')).toEqual({ children: 'foo: true' });
});