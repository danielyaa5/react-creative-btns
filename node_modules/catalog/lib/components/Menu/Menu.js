'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.style = style;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _CatalogPropTypes = require('../../CatalogPropTypes');

var _typography = require('../../styles/typography');

var _Link = require('../Link/Link');

var _Link2 = _interopRequireDefault(_Link);

var _ListItem = require('./ListItem');

var _ListItem2 = _interopRequireDefault(_ListItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function style(theme) {
  return {
    bar: {
      background: theme.sidebarColor,
      height: '100vh',
      display: 'flex',
      flexDirection: 'column'
    },
    h1: {
      boxSizing: 'border-box',
      margin: 0,
      padding: theme.sizeL + 'px ' + theme.sizeXxl + 'px',
      height: theme.pageHeadingHeight,
      display: 'flex',
      justifyContent: 'flex-end',
      flexDirection: 'column'
    },
    title: _extends({}, (0, _typography.heading)(theme, 1), {
      color: theme.sidebarColorHeading,
      fontWeight: 700,
      marginBottom: (0, _typography.getFontSize)(theme, 5),
      marginTop: 0
    }),
    logo: {
      width: '100%',
      marginBottom: (0, _typography.getFontSize)(theme, 5),
      backgroundSize: 'contain',
      backgroundRepeat: 'no-repeat',
      backgroundPosition: '0 100%',
      flexGrow: 1
    },
    // Make it accessible to screen readers, hide visually, see http://webaim.org/techniques/css/invisiblecontent/#absolutepositioning
    logoTitle: {
      position: 'absolute',
      left: '-10000px',
      top: 'auto',
      width: '1px',
      height: '1px',
      overflow: 'hidden'
    },
    list: {
      borderBottom: '1px solid ' + theme.sidebarColorLine,
      listStyle: 'none',
      margin: 0,
      padding: 0
    },
    listNested: {
      borderTop: 'none',
      borderBottom: 'none',
      padding: '0 0 15px 40px'
    },
    info: _extends({}, (0, _typography.text)(theme, -1), {
      padding: 20,
      color: theme.lightColor
    }),
    link: {
      color: theme.lightColor
    }
  };
}

var Menu = function (_React$Component) {
  _inherits(Menu, _React$Component);

  function Menu() {
    _classCallCheck(this, Menu);

    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }

  Menu.prototype.render = function render() {
    var _props = this.props,
        theme = _props.theme,
        pageTree = _props.pageTree,
        logoSrc = _props.logoSrc,
        title = _props.title,
        basePath = _props.basePath;


    var currentStyle = style(theme);

    var titleString = title ? title : '';

    return _react2.default.createElement(
      'div',
      { style: currentStyle.bar },
      _react2.default.createElement(
        'div',
        { style: { flexGrow: 1 } },
        _react2.default.createElement(
          _Link2.default,
          { to: basePath, style: { textDecoration: 'none' } },
          _react2.default.createElement(
            'h1',
            { style: currentStyle.h1 },
            logoSrc ? _react2.default.createElement(
              'div',
              { style: _extends({}, currentStyle.logo, { backgroundImage: 'url("' + logoSrc + '")' }) },
              _react2.default.createElement(
                'span',
                { style: currentStyle.logoTitle },
                titleString
              )
            ) : _react2.default.createElement(
              'div',
              { style: currentStyle.title },
              titleString
            )
          )
        ),
        _react2.default.createElement(
          'ul',
          { style: currentStyle.list },
          pageTree.filter(function (page) {
            return !page.hideFromMenu;
          }).map(function (page) {
            return _react2.default.createElement(_ListItem2.default, { key: page.id, page: page, theme: theme });
          })
        )
      ),
      _react2.default.createElement(
        'div',
        { style: currentStyle.info },
        'Powered by ',
        _react2.default.createElement(
          'a',
          { style: currentStyle.link, href: 'http://interactivethings.github.io/catalog', target: '_blank' },
          'Catalog'
        )
      )
    );
  };

  return Menu;
}(_react2.default.Component);

Menu.propTypes = {
  pageTree: _CatalogPropTypes.pagesShape.isRequired,
  theme: _react.PropTypes.object.isRequired,
  logoSrc: _react.PropTypes.string,
  basePath: _react.PropTypes.string,
  title: _react.PropTypes.string
};

Menu.defaultProps = {
  styles: [],
  scripts: []
};

exports.default = Menu;