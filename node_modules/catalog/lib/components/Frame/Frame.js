'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _CatalogPropTypes = require('../../CatalogPropTypes');

var _FrameComponent = require('./FrameComponent');

var _FrameComponent2 = _interopRequireDefault(_FrameComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var frameStyle = {
  width: '100%',
  height: '100%',
  lineHeight: 0,
  margin: 0,
  padding: 0,
  border: 'none'
};

var renderStyles = function renderStyles(styles) {
  return styles.map(function (src, i) {
    return _react2.default.createElement('link', { key: i, href: src, rel: 'stylesheet', type: 'text/css' });
  });
};

var Frame = function (_Component) {
  _inherits(Frame, _Component);

  function Frame() {
    _classCallCheck(this, Frame);

    var _this = _possibleConstructorReturn(this, _Component.call(this));

    _this.state = {};
    return _this;
  }

  Frame.prototype.render = function render() {
    var _this2 = this;

    var _props = this.props,
        children = _props.children,
        width = _props.width,
        parentWidth = _props.parentWidth;
    var styles = this.context.catalog.page.styles;

    var height = this.state.height || this.props.height;
    var autoHeight = !this.props.height;
    var scale = Math.min(1, parentWidth / width);
    var scaledHeight = autoHeight ? height : height * scale;

    return _react2.default.createElement(
      'div',
      { style: { lineHeight: 0, width: parentWidth, height: scaledHeight } },
      _react2.default.createElement(
        'div',
        { style: {
            width: width,
            height: height,
            transformOrigin: '0% 0%',
            transform: 'scale( ' + scale + ' )',
            overflow: 'hidden'
          } },
        _react2.default.createElement(
          _FrameComponent2.default,
          {
            style: frameStyle,
            frameBorder: '0',
            allowTransparency: 'true',
            scrolling: 'no',
            head: [_react2.default.createElement(
              'style',
              { key: 'stylereset' },
              'html,body{margin:0;padding:0}'
            )].concat(renderStyles(styles)),
            onRender: autoHeight ? function (content) {
              var contentHeight = content.offsetHeight;
              if (contentHeight !== height) {
                _this2.setState({ height: contentHeight });
              }
            } : function () {
              return null;
            }
          },
          children
        )
      )
    );
  };

  return Frame;
}(_react.Component);

exports.default = Frame;


Frame.propTypes = {
  children: _react.PropTypes.element,
  width: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
  parentWidth: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
  height: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string])
};

Frame.contextTypes = {
  catalog: _CatalogPropTypes.catalogShape.isRequired
};