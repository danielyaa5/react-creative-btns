'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _radium = require('radium');

var _radium2 = _interopRequireDefault(_radium);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Span = function (_Component) {
  _inherits(Span, _Component);

  function Span() {
    _classCallCheck(this, Span);

    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }

  Span.prototype.render = function render() {
    var _props = this.props,
        children = _props.children,
        span = _props.span;


    var style = {
      boxSizing: 'border-box',
      display: 'flex',
      flexBasis: '100%',
      // Bug fix for Firefox; width and flexBasis don't work on horizontally scrolling code blocks
      maxWidth: '100%',
      flexWrap: 'wrap',
      margin: '24px 0 0 0',
      padding: 0,
      position: 'relative',
      '@media (min-width: 640px)': {
        flexBasis: 'calc(' + span / 6 * 100 + '% - 10px)',
        // Bug fix for Firefox; width and flexBasis don't work on horizontally scrolling code blocks
        maxWidth: 'calc(' + span / 6 * 100 + '% - 10px)',
        margin: '24px 10px 0 0'
      }
    };

    return _react2.default.createElement(
      'div',
      _extends({}, this.props, { style: _extends({}, style, this.props.style) }),
      children
    );
  };

  return Span;
}(_react.Component);

Span.propTypes = {
  span: _react.PropTypes.number,
  children: _react.PropTypes.node.isRequired,
  style: _react.PropTypes.object
};

Span.defaulProps = {
  span: 6
};

exports.default = (0, _radium2.default)(Span);