'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _CatalogPropTypes = require('../../CatalogPropTypes');

var _Loader = require('./Loader');

var _Loader2 = _interopRequireDefault(_Loader);

var _PageRenderer = require('./PageRenderer');

var _PageRenderer2 = _interopRequireDefault(_PageRenderer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PageContentLoader = function (_Component) {
  _inherits(PageContentLoader, _Component);

  function PageContentLoader() {
    _classCallCheck(this, PageContentLoader);

    var _this = _possibleConstructorReturn(this, _Component.call(this));

    _this.state = {
      content: null
    };
    return _this;
  }

  PageContentLoader.prototype.componentWillMount = function componentWillMount() {
    this.fetchPageData(this.context.catalog.page.src);
  };

  PageContentLoader.prototype.componentWillReceiveProps = function componentWillReceiveProps(_, nextContext) {
    if (nextContext.catalog.page.src !== this.context.catalog.page.src) {
      this.setState({ content: null });
      this.fetchPageData(nextContext.catalog.page.src);
    }
  };

  PageContentLoader.prototype.fetchPageData = function fetchPageData(url) {
    var _this2 = this;

    fetch(url, { credentials: 'same-origin' }).then(function (response) {
      return response.text();
    }).then(function (text) {
      return _this2.setState({ content: text });
    }).catch(function (error) {
      return _this2.setState({
        content: error
      });
    });
  };

  PageContentLoader.prototype.render = function render() {
    var content = this.state.content || _react2.default.createElement(_Loader2.default, null);
    return _react2.default.createElement(_PageRenderer2.default, _extends({}, this.props, { content: content }));
  };

  return PageContentLoader;
}(_react.Component);

PageContentLoader.contextTypes = {
  catalog: _CatalogPropTypes.catalogShape.isRequired
};

exports.default = PageContentLoader;